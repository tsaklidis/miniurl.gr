name: CI

on:
  push:
    branches:
      - master
      - 'fix/**'
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Unit & Integration Tests (Local)
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
      API_BASE_URL: http://localhost:8000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage pytest pytest-asyncio

      - name: Wait for Redis to be ready
        run: |
          for i in $(seq 1 20); do
            nc -z localhost 6379 && echo "Redis is up" && exit 0
            sleep 1
          done
          echo "Redis did not start in time" && exit 1

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in $(seq 1 20); do
            nc -z localhost 5432 && echo "Postgres is up" && exit 0
            sleep 1
          done
          echo "Postgres did not start in time" && exit 1

      - name: Set up .env file
        run: |
          echo "REDIS_HOST=localhost" > .env
          echo "REDIS_PORT=6379" >> .env
          echo "POSTGRES_HOST=localhost" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "POSTGRES_USER=testuser" >> .env
          echo "POSTGRES_PASSWORD=testpass" >> .env
          echo "POSTGRES_DB=testdb" >> .env
          echo "API_BASE_URL=http://localhost:8000" >> .env

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Run DB migrations (if needed)
        run: |
          if [ -f "alembic.ini" ]; then
            alembic upgrade head
          fi

      - name: Start FastAPI app in background
        run: |
          nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 > fastapi.log 2>&1 &
          sleep 10
          cat fastapi.log

      - name: Wait for FastAPI to be ready
        run: |
          for i in $(seq 1 30); do
            nc -z localhost 8000 && echo "FastAPI is up" && exit 0
            sleep 1
          done
          echo "FastAPI did not start in time" && exit 1

      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests/internal tests/smoke
          coverage report
          coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}